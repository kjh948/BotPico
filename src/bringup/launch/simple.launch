<?xml version="1.0"?> 
<launch>

    <!-- Publish robot parameters -->
    <node name="robot_params" pkg="robot_params" type="publish_params.py" output="screen">
    </node>

    
    <!-- Launch robot-pose-ekf node -->
    <!-- Extended Kalman Filter from robot_pose_ekf Node-->
    <!-- Subscribe: /odom, /imu/data, /vo -->
    <!-- Publish: /robot_pose_ekf/odom_combined -->

    <!-- IMU Relay and Filter -->
    <include file="$(find bringup)/launch/imu.launch" />

    <remap from="/imu_data" to="/imu/data" />
  
    <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
        <param name="output_frame" value="odom"/>
        <param name="base_footprint_frame" value="base_link"/>
        <param name="freq" value="30.0"/>
        <param name="sensor_timeout" value="1.0"/>
        <param name="odom_used" value="true"/>
        <param name="imu_used" value="true"/>
        <param name="vo_used" value="false"/>
        <param name="gps_used" value="false"/>
        <param name="debug" value="false"/>
        <param name="self_diagnose" value="false"/>
    </node>

    <!-- Launch wheel encoder tick publisher node -->
    <node name="mtr_encdr" pkg="wheels" type="encoder_publisher.py" output="screen">
    </node>   

    <!-- Broadcast tf static coordinate frames -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="tf_base_link_imu" args="0 0 0.08 0 0 0 1 base_link imu_link" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="tf_base_link_laser" args="0 0 0.17 0 0 0 1 base_link laser" />

    <!-- Launch odometry publisher node -->
    <node name="odometer" pkg="odom_pub" type="odometer_publisher.py" output="screen">
    </node>

</launch>
